{"version":3,"sources":["component/search.js","component/button.js","component/searchCountry.js","component/users.js","component/userDetails.js","component/userList.js","component/pagination.js","component/select.js","App.js","reportWebVitals.js","index.js"],"names":["Search","handleInputSearch","handleSubmitSearch","searchInput","setSearchInput","onSubmit","e","className","type","placeholder","onChange","Button","fitterButton","genders","map","gender","index","buttonStyle","onClick","SearchCountry","searchInputCountry","setSearchInputCountry","Users","title","firstName","lastName","streetNum","streetName","city","state","email","phone","image","handleClick","Avatar","src","UserDetails","user","name","first","last","location","street","number","cell","age","dob","date","registered","large","picture","slice","UserList","users","useState","userData","setUserData","Pagination","postsPerPage","totalPosts","nextPage","paginate","prevPage","pageNumbers","i","Math","ceil","push","SelectCountry","countries","id","country","unicodeFlag","value","App","setUsers","setLoading","setError","buttonGender","setButtonGender","setGenders","activeGenderList","setActiveGenderList","currentPage","setCurrentPage","setCountries","fetchUsers","a","fetch","response","json","result","fetchUser","results","buttonSort","Set","console","log","FetchCountry","res","datas","countryName","data","useEffect","indexOfLastPost","indexOfFirstPost","currentPosts","lastPage","length","setInputValue","target","inputValue","preventDefault","searchResult","filter","csvData","postcode","coordinates","latitiude","longitude","timezone","offset","description","login","username","password","nat","genderUser","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a46bf3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport './search.css';\r\nconst Search = ({\r\n  handleInputSearch,\r\n  handleSubmitSearch,\r\n  searchInput,\r\n  setSearchInput,\r\n}) => {\r\n  // console.log(searchInput);\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleSubmitSearch(e, searchInput);\r\n        }}\r\n      >\r\n        <div className=\"form-control\">\r\n          <FaSearch className=\"form-control__searchIcon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Find a user\"\r\n            // value={searchInput}\r\n            onChange={(e) => {\r\n              handleInputSearch(e, setSearchInput);\r\n            }}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport { FaFemale, FaMale, FaUsers} from 'react-icons/fa';\r\nimport './button.css';\r\nconst Button = ({fitterButton, genders}) => {\r\n    return (\r\n      <div className='users-button'>\r\n       \r\n          {genders.map((gender, index)=>{\r\n            // const{all, male, female}= gender\r\n            let buttonStyle = \"users-btn\";\r\n            if(index === 2){\r\n              buttonStyle='user-btn-male'\r\n            }else if(index===1){\r\n              buttonStyle= 'user-btn-female'\r\n            }\r\n            return (\r\n              <div className='btn-container' key={index}>\r\n                <button\r\n                  type=\"button\"\r\n                  className={buttonStyle}\r\n                  onClick={() => fitterButton(gender)}\r\n                >\r\n                  {gender === 'all' && <FaUsers className=\"icon\" />}\r\n                  {gender === 'male' && <FaMale className=\"icon\" />}\r\n                  {gender === 'female' && <FaFemale className=\"icon\" />}\r\n                </button>\r\n                <p>{gender} user</p>\r\n              </div>\r\n            );\r\n          })}\r\n       \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport './searchCountry.css';\r\n\r\nconst SearchCountry = ({\r\n  handleInputSearch,\r\n  handleSubmitSearch,\r\n  searchInputCountry,\r\n  setSearchInputCountry\r\n}) => {\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleSubmitSearch(e, searchInputCountry);\r\n        }}\r\n      >\r\n        <div className=\"form-control-2\">\r\n          <FaSearch className=\"form-control-2__searchIcon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Find in list\"\r\n            // value={searchInputCountry}\r\n            onChange={(e) => {\r\n              handleInputSearch(e, setSearchInputCountry);\r\n            }}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchCountry\r\n","import React, { useState } from 'react';\r\nimport './users.css';\r\nimport { BiEnvelope } from 'react-icons/bi';\r\nimport { FiPhoneCall } from 'react-icons/fi';\r\nimport { Avatar } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nconst Users = ({\r\n  title,\r\n  firstName,\r\n  lastName,\r\n  streetNum,\r\n  streetName,\r\n  city,\r\n  state,\r\n  email,\r\n  phone,\r\n  image,\r\n  handleClick,\r\n}) => {\r\n  return (\r\n    <div className=\"user-profile\" onClick={handleClick}>\r\n      <div className=\"user-details\">\r\n        <div className=\"user-pictures\">\r\n          <Avatar src={image} className=\"user-picture\" />\r\n        </div>\r\n\r\n        <div className=\"user-info\">\r\n          <h4>\r\n            {title} {firstName} {lastName}\r\n          </h4>\r\n          <h5>\r\n            {streetNum} {streetName}, {city}, {state}\r\n          </h5>\r\n          <div className=\"user-contact\">\r\n            <p>\r\n              <BiEnvelope /> {email}\r\n            </p>\r\n            <p>\r\n              <FiPhoneCall /> {phone}\r\n            </p>\r\n            <div className=\"user-btn\">\r\n              <ArrowForwardIcon />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { BsArrowLeftShort } from 'react-icons/bs';\r\nimport { BiEnvelope } from 'react-icons/bi';\r\nimport { FiPhoneCall } from 'react-icons/fi';\r\nimport { BsPhone } from 'react-icons/bs';\r\n// import Konfo from './img/konfo.png';\r\nimport './userDetails.css';\r\n\r\nconst UserDetails = ({\r\n  user: {\r\n    name: { title, first, last },\r\n    location: {\r\n      street: { number, name },\r\n      city,\r\n      state,\r\n    },\r\n    email,\r\n    phone,\r\n    cell,\r\n    dob: { age },\r\n    registered: { date },\r\n    picture: { large },\r\n  },\r\n  handleClick,\r\n}) => (\r\n  <div>\r\n    <button className=\"results-btn\" onClick={handleClick}>\r\n      <BsArrowLeftShort className=\"back-arrow-icon\" /> RESULTS\r\n    </button>\r\n    <div className=\"more-user-details\">\r\n      <Avatar src={large} className=\"user-image\" />\r\n      <div className=\"other-details\">\r\n        <h3 className=\"user-names\">\r\n          {title} {first} {last} <span>{age}</span>{' '}\r\n        </h3>\r\n        <p className=\"user-address\">\r\n          {number} {name}, {city}, {state}{' '}\r\n        </p>\r\n        <p className=\"user-email\">\r\n          {' '}\r\n          <BiEnvelope /> {email}\r\n        </p>\r\n        <p className=\"user-registered\"> JOINED: {date.slice(0, 10)}</p>\r\n        <p className=\"user-phone\">\r\n          {' '}\r\n          <FiPhoneCall /> {phone}\r\n        </p>\r\n        <p className=\"user-cell\">\r\n          {' '}\r\n          <BsPhone /> {cell}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default UserDetails;\r\n","import React, { useState } from 'react';\r\nimport './userList.css';\r\nimport Users from '../component/users';\r\nimport UserDetails from '../component/userDetails';\r\n\r\nconst UserList = ({ users }) => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  return (\r\n    <div className=\"user-list\">\r\n      {userData === null &&\r\n        users.map((user) => {\r\n          const {\r\n            name: { title, first, last },\r\n            location: {\r\n              street: { number, name },\r\n              city,\r\n              state,\r\n            },\r\n            email,\r\n            phone,\r\n            cell,\r\n            dob: { age },\r\n            registered: { date },\r\n            picture: { large },\r\n          } = user;\r\n          return (\r\n            <Users\r\n              key={date}\r\n              title={title}\r\n              firstName={first}\r\n              lastName={last}\r\n              streetNum={number}\r\n              streetName={name}\r\n              city={city}\r\n              state={state}\r\n              email={email}\r\n              phone={phone}\r\n              cell={cell}\r\n              age={age}\r\n              registered={date}\r\n              image={large}\r\n              handleClick={() => setUserData(user)}\r\n            />\r\n          );\r\n        })}\r\n      {userData && (\r\n        <UserDetails user={userData} handleClick={() => setUserData(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react'\r\nimport './pagination.css';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nconst Pagination = ({postsPerPage, totalPosts, paginate, nextPage,prevPage }) => {\r\n const pageNumbers = [];\r\n for(let i= 1; i <= Math.ceil(totalPosts/postsPerPage); i++){\r\n     pageNumbers.push(i)\r\n }\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button\r\n          className=\"prev-btn\"\r\n          onClick={() => {\r\n            prevPage();\r\n          }}\r\n        >\r\n          <ArrowBackIosIcon className=\"page-btn\" />\r\n        </button>\r\n        {/* {pageNumbers.map((number) => {\r\n          return (\r\n            <button\r\n              key={number}\r\n              className=\"page-item\"\r\n              onClick={() => {\r\n                paginate(number);\r\n              }}\r\n            >\r\n              {number}\r\n            </button>\r\n          );\r\n        })} */}\r\n        <button\r\n          className=\"prev-btn\"\r\n          onClick={() => {\r\n            nextPage();\r\n          }}\r\n        >\r\n          <ArrowForwardIosIcon className=\"page-btn\" />\r\n        </button>\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react';\r\n\r\nconst SelectCountry = ({ countries }) => {\r\n  return (\r\n    <select name=\"country\" id=\"\" placeholder=\"Country\">\r\n      {countries.map((country) => {\r\n        const { name, unicodeFlag } = country;\r\n        return (\r\n          <option value={name} placeholder=\"Country\">\r\n            {unicodeFlag}  {name}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectCountry;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Search from './component/search';\nimport Button from './component/button';\nimport SearchCountry from './component/searchCountry';\nimport UserList from './component/userList';\nimport Pagination from './component/pagination';\nimport { BiCloudDownload } from 'react-icons/bi';\nimport { IoIosSwitch } from 'react-icons/io';\nimport { CSVLink } from 'react-csv';\nimport SelectCountry from './component/select';\n\n// import './user.css';\n\nconst url = 'https://randomuser.me/api/?results=15';\nconst countryUrl = 'https://countriesnow.space/api/v0.1/countries/flag/unicode';\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [buttonGender, setButtonGender] = useState([]);\n  const [genders, setGenders] = useState([]);\n  const [activeGenderList, setActiveGenderList] = useState('All Users');\n  const [searchInput, setSearchInput] = useState('');\n  const [searchInputCountry, setSearchInputCountry] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(3);\n  const [countries, setCountries] = useState([]);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const result = await response.json();\n      const fetchUser = result.results;\n      setUsers(fetchUser);\n      setButtonGender(fetchUser);\n      // setSearchUser(fetchUser[0])\n      let buttonSort = fetchUser.map((user) => user.gender);\n      buttonSort = ['all', ...new Set(buttonSort)];\n      setGenders(buttonSort);\n      setLoading(false);\n      setError(false);\n    } catch (error) {\n      setLoading(false);\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  const FetchCountry = async () => {\n    try {\n      const res = await fetch(countryUrl);\n      const datas = await res.json();\n      const countryName = datas.data;\n      console.log(countryName);\n      setCountries(countryName);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    FetchCountry();\n  }, []);\n\n  const fitterButton = (gender) => {\n    const genderUser = buttonGender.filter((user) => user.gender === gender);\n    setUsers(genderUser);\n\n    setActiveGenderList(`${gender} User`);\n    //  setButtonGender(genderUser)\n    if (gender === 'all') {\n      setUsers(buttonGender);\n      setActiveGenderList('All Users');\n    }\n  };\n\n  // get the index of the last post\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = users.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const nextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const prevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  useEffect(() => {\n    let lastPage = Math.ceil(users.length / postsPerPage);\n    if (currentPage < 1) {\n      setCurrentPage(lastPage);\n    }\n    if (currentPage > lastPage) {\n      setCurrentPage(1);\n    }\n  }, [users, currentPage]);\n\n  const handleInputSearch = (e, setInputValue) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitSearch = (e, inputValue) => {\n    e.preventDefault();\n    if (inputValue) {\n      const searchResult = users.filter((user) => {\n        const {\n          name: { first, last },\n        } = user;\n        if (inputValue === first || inputValue === last) {\n          return user;\n        }\n      });\n      console.log(searchResult);\n      if (searchResult) {\n        setUsers(searchResult);\n      }\n    }\n    if (inputValue === '') {\n      setUsers(users);\n    }\n  };\n  const csvData = users.map((user) => {\n    const {\n      gender,\n      name: { title, first, last },\n      location: {\n        street: { number, name },\n        city,\n        state,\n        country,\n        postcode,\n        coordinates: { latitiude, longitude },\n        timezone: { offset, description },\n      },\n      email,\n      login: { username, password },\n      dob: { age },\n      phone,\n      cell,\n      registered: { date },\n      nat,\n    } = user;\n    return {\n      gender,\n      title,\n      first,\n      last,\n      number,\n      name,\n      city,\n      state,\n      country,\n      postcode,\n      latitiude,\n      longitude,\n      offset,\n      description,\n      email,\n      username,\n      password,\n      phone,\n      cell,\n      age,\n      date,\n      nat,\n    };\n  });\n  return (\n    <section>\n      <div className=\"user\">\n        <h3 className=\"header\">\n          Hello, <span>Juwon</span>\n        </h3>\n        <p> Welcome to your dashboard, kindly sort through the user base </p>\n        <Search\n          handleInputSearch={handleInputSearch}\n          handleSubmitSearch={handleSubmitSearch}\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n        />\n        <h2> Show users</h2>\n        <Button fitterButton={fitterButton} genders={genders} />\n      </div>\n      <div className=\"users\">\n        <h3>{activeGenderList}</h3>\n        <p>Filter by</p>\n        <div className=\"search-country\">\n          <SearchCountry\n            handleInputSearch={handleInputSearch}\n            handleSubmitSearch={handleSubmitSearch}\n            searchInputCountry={searchInputCountry}\n            setSearchInputCountry={setSearchInputCountry}\n          />\n          <SelectCountry countries={countries} />\n          <p className=\"switch\">\n            <IoIosSwitch />\n            Show Country\n          </p>\n        </div>\n\n        <UserList users={currentPosts} />\n        <div className=\"footer\">\n          <CSVLink className=\"download\" data={csvData}>\n            <BiCloudDownload className=\"download-icon\" /> Download results\n          </CSVLink>\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={users.length}\n            paginate={paginate}\n            nextPage={nextPage}\n            prevPage={prevPage}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}